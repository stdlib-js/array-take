// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-take@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/array-zeros@v0.2.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/array-dtype@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-index-mode@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-index-modes@v0.2.0-esm/index.mjs";function a(e,s){return i(s)?o(s,"mode")&&(e.mode=s.mode,!m(e.mode))?new TypeError(n('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"mode",d().join('", "'),e.mode)):null:new TypeError(n("invalid argument. Options argument must be an object. Value: `%s`.",s))}function l(i,o){var m,d,l;if(!e(i))throw new TypeError(n("invalid argument. First argument must be an array-like object. Value: `%s`.",i));if(!e(o))throw new TypeError(n("invalid argument. Second argument must be an array-like object. Value: `%s`.",o));if(m={mode:"normalize"},arguments.length>2&&(d=a(m,arguments[2])))throw d;return"generic"===(l=r(i))||null===l?s(i,o,m.mode):s.assign(i,o,m.mode,t(o.length,l),1,0)}export{l as default};
//# sourceMappingURL=index.mjs.map
